services:
  server:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./storage/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    develop:
      watch:
        - path: ./storage/nginx/nginx.conf
          target: /etc/nginx/nginx.conf
          action: sync+restart
    labels:
      - traefik.enable=true
      - traefik.http.routers.ashtachamma.rule=Host(`dev.anusec.com`)
    networks:
      - frontend
      - ashtachamma

  frontend:
    image: ashtachamma_frontend
    networks:
      - ashtachamma
    build:
      context: ./frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /app
        - path: ./frontend/package.json
          action: rebuild
    command: ["pnpm", "run", "dev"]

  backend:
    image: ashtachamma_backend
    networks:
      - ashtachamma
    build:
      context: ./backend
      dockerfile: Dockerfile

    command:
      [
        "uvicorn",
        "main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
        "--proxy-headers",
        "--forwarded-allow-ips='*'",
      ]
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
        - path: ./requirements.txt
          action: rebuild
    environment:
      - BROADCAST_URL=redis://queue:6379
      - BROADCAST_CHANNEL=ashtachamma
    depends_on:
      - queue

  queue:
    image: redis
    restart: always
    networks:
      - ashtachamma

networks:
  frontend:
    external: true
  ashtachamma:
    external: false
